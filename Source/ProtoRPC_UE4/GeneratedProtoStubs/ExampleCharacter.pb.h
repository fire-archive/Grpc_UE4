// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExampleCharacter.proto

#ifndef PROTOBUF_ExampleCharacter_2eproto__INCLUDED
#define PROTOBUF_ExampleCharacter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace paddlecreekgames {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ExampleCharacter_2eproto();
void protobuf_AssignDesc_ExampleCharacter_2eproto();
void protobuf_ShutdownFile_ExampleCharacter_2eproto();

class ExampleCharacter;

// ===================================================================

class ExampleCharacter : public ::google::protobuf::Message {
 public:
  ExampleCharacter();
  virtual ~ExampleCharacter();

  ExampleCharacter(const ExampleCharacter& from);

  inline ExampleCharacter& operator=(const ExampleCharacter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExampleCharacter& default_instance();

  void Swap(ExampleCharacter* other);

  // implements Message ----------------------------------------------

  inline ExampleCharacter* New() const { return New(NULL); }

  ExampleCharacter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExampleCharacter& from);
  void MergeFrom(const ExampleCharacter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExampleCharacter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 Health = 3;
  void clear_health();
  static const int kHealthFieldNumber = 3;
  ::google::protobuf::int64 health() const;
  void set_health(::google::protobuf::int64 value);

  // optional int64 Armor = 4;
  void clear_armor();
  static const int kArmorFieldNumber = 4;
  ::google::protobuf::int64 armor() const;
  void set_armor(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.paddlecreekgames.ExampleCharacter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 health_;
  ::google::protobuf::int64 armor_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ExampleCharacter_2eproto();
  friend void protobuf_AssignDesc_ExampleCharacter_2eproto();
  friend void protobuf_ShutdownFile_ExampleCharacter_2eproto();

  void InitAsDefaultInstance();
  static ExampleCharacter* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ExampleCharacter

// optional string Id = 1;
inline void ExampleCharacter::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExampleCharacter::id() const {
  // @@protoc_insertion_point(field_get:com.paddlecreekgames.ExampleCharacter.Id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExampleCharacter::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.paddlecreekgames.ExampleCharacter.Id)
}
inline void ExampleCharacter::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.paddlecreekgames.ExampleCharacter.Id)
}
inline void ExampleCharacter::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.paddlecreekgames.ExampleCharacter.Id)
}
inline ::std::string* ExampleCharacter::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.paddlecreekgames.ExampleCharacter.Id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExampleCharacter::release_id() {
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExampleCharacter::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.paddlecreekgames.ExampleCharacter.Id)
}

// optional string Name = 2;
inline void ExampleCharacter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExampleCharacter::name() const {
  // @@protoc_insertion_point(field_get:com.paddlecreekgames.ExampleCharacter.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExampleCharacter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.paddlecreekgames.ExampleCharacter.Name)
}
inline void ExampleCharacter::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.paddlecreekgames.ExampleCharacter.Name)
}
inline void ExampleCharacter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.paddlecreekgames.ExampleCharacter.Name)
}
inline ::std::string* ExampleCharacter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:com.paddlecreekgames.ExampleCharacter.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExampleCharacter::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExampleCharacter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:com.paddlecreekgames.ExampleCharacter.Name)
}

// optional int64 Health = 3;
inline void ExampleCharacter::clear_health() {
  health_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExampleCharacter::health() const {
  // @@protoc_insertion_point(field_get:com.paddlecreekgames.ExampleCharacter.Health)
  return health_;
}
inline void ExampleCharacter::set_health(::google::protobuf::int64 value) {
  
  health_ = value;
  // @@protoc_insertion_point(field_set:com.paddlecreekgames.ExampleCharacter.Health)
}

// optional int64 Armor = 4;
inline void ExampleCharacter::clear_armor() {
  armor_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExampleCharacter::armor() const {
  // @@protoc_insertion_point(field_get:com.paddlecreekgames.ExampleCharacter.Armor)
  return armor_;
}
inline void ExampleCharacter::set_armor(::google::protobuf::int64 value) {
  
  armor_ = value;
  // @@protoc_insertion_point(field_set:com.paddlecreekgames.ExampleCharacter.Armor)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace paddlecreekgames
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ExampleCharacter_2eproto__INCLUDED
